{"ast":null,"code":"var _jsxFileName = \"/Users/Devinci/Desktop/AppAcademy/Teach/06-December-Break/use-effect-giphy/src/SearchBar.js\";\nimport React, { useState, useEffect } from 'react';\n\nconst SearchBar = props => {\n  const [inputValue, setInputValue] = useState('');\n  const [background, setBackground] = useState('#67a05c');\n\n  const updateInputVal = e => {\n    setInputValue(e.target.value);\n  };\n\n  const searchForGif = e => {\n    e.preventDefault();\n    props.setSearchQuery(inputValue);\n    setInputValue('');\n  };\n\n  useEffect(() => {\n    window.addEventListener('mousemove', logKey);\n\n    function logKey(e) {\n      if (e.pageY > 200 && e.pageY < 650) {\n        setBackground('#f4f488');\n      } else {\n        setBackground('#67a05c');\n      }\n    }\n\n    return () => {\n      window.removeEventListener('mousemove', logKey);\n    };\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"searchBar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: searchForGif,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    style: {\n      background,\n      color: 'black'\n    },\n    type: \"text\",\n    value: inputValue,\n    onChange: updateInputVal,\n    placeholder: \"Search for a GIF!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default SearchBar;","map":{"version":3,"sources":["/Users/Devinci/Desktop/AppAcademy/Teach/06-December-Break/use-effect-giphy/src/SearchBar.js"],"names":["React","useState","useEffect","SearchBar","props","inputValue","setInputValue","background","setBackground","updateInputVal","e","target","value","searchForGif","preventDefault","setSearchQuery","window","addEventListener","logKey","pageY","removeEventListener","color"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AACzB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,SAAD,CAA5C;;AACA,QAAMQ,cAAc,GAAGC,CAAC,IAAI;AAC1BJ,IAAAA,aAAa,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAGH,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACI,cAAF;AACAV,IAAAA,KAAK,CAACW,cAAN,CAAqBV,UAArB;AACAC,IAAAA,aAAa,CAAC,EAAD,CAAb;AACD,GAJD;;AAMAJ,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,MAAM,CAACC,gBAAP,CAAwB,WAAxB,EAAqCC,MAArC;;AAEA,aAASA,MAAT,CAAgBR,CAAhB,EAAmB;AACjB,UAAIA,CAAC,CAACS,KAAF,GAAU,GAAV,IAAiBT,CAAC,CAACS,KAAF,GAAU,GAA/B,EAAoC;AAClCX,QAAAA,aAAa,CAAC,SAAD,CAAb;AACD,OAFD,MAEO;AACLA,QAAAA,aAAa,CAAC,SAAD,CAAb;AACD;AACF;;AAED,WAAO,MAAM;AACXQ,MAAAA,MAAM,CAACI,mBAAP,CAA2B,WAA3B,EAAwCF,MAAxC;AACD,KAFD;AAGD,GAdQ,CAAT;AAgBA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,QAAQ,EAAEL,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,KAAK,EAAE;AAAEN,MAAAA,UAAF;AAAcc,MAAAA,KAAK,EAAE;AAArB,KADT;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,KAAK,EAAEhB,UAHT;AAIE,IAAA,QAAQ,EAAEI,cAJZ;AAKE,IAAA,WAAW,EAAC,mBALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAaD,CA1CD;;AA4CA,eAAeN,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst SearchBar = props => {\n  const [inputValue, setInputValue] = useState('');\n  const [background, setBackground] = useState('#67a05c');\n  const updateInputVal = e => {\n    setInputValue(e.target.value);\n  };\n\n  const searchForGif = e => {\n    e.preventDefault();\n    props.setSearchQuery(inputValue);\n    setInputValue('');\n  };\n\n  useEffect(() => {\n    window.addEventListener('mousemove', logKey);\n\n    function logKey(e) {\n      if (e.pageY > 200 && e.pageY < 650) {\n        setBackground('#f4f488');\n      } else {\n        setBackground('#67a05c');\n      }\n    }\n\n    return () => {\n      window.removeEventListener('mousemove', logKey);\n    };\n  });\n\n  return (\n    <div className='searchBar'>\n      <form onSubmit={searchForGif}>\n        <input\n          style={{ background, color: 'black' }}\n          type='text'\n          value={inputValue}\n          onChange={updateInputVal}\n          placeholder='Search for a GIF!'\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}