{"ast":null,"code":"var _jsxFileName = \"/Users/Devinci/Desktop/AppAcademy/Teach/06-December-Break/use-effect-giphy/starter/src/SearchBar.js\";\nimport React, { useState, useEffect } from 'react';\n\nconst SearchBar = props => {\n  const [inputValue, setInputValue] = useState('');\n  const [background, setBackground] = useState('#67a05c');\n  const [placer, setPlacer] = useState('');\n\n  const updateInputVal = e => {\n    setInputValue(e.target.value);\n  }; // create a function searchForGif that takes the event, stops the default and then calls the setSearchQuery\n  // passing it the input Value\n  // clear the input Value\n\n\n  const searchForGif = e => {\n    e.preventDefault();\n    props.setSearchQuery(inputValue);\n    setInputValue('');\n  }; // add a useEffect to listen to the mousemoves on the window and use a function 'logKey' to react accordingly.\n  // logKey function will track the location of the mouse on the page and if the Y page coordinates for Y are greater\n  // than 200 and less then 650 the background state should be updated with a new string color #f4f488 and set the placeholder variable to\n  // say 'Pick a new GIF already!'\n  // otherwise the background should be set to #67a05c and the placeholder should say 'Search for a GIF'\n  // placeholders should receive their value from the placer slice of state.\n  // remember to cleanup that event listener\n  // value attribute on input should take its value from the inputValue\n  // input should have an onChange event listener that calls the sets the inputValue with the target value of the event\n  // background css for the style attribute on input should be added with the background slice of state\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"searchBar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: searchForGif,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    style: {\n      color: 'black'\n    },\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default SearchBar;","map":{"version":3,"sources":["/Users/Devinci/Desktop/AppAcademy/Teach/06-December-Break/use-effect-giphy/starter/src/SearchBar.js"],"names":["React","useState","useEffect","SearchBar","props","inputValue","setInputValue","background","setBackground","placer","setPlacer","updateInputVal","e","target","value","searchForGif","preventDefault","setSearchQuery","color"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,SAAD,CAA5C;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMU,cAAc,GAAIC,CAAD,IAAO;AAC5BN,IAAAA,aAAa,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACD,GAFD,CAL2B,CAS3B;AACA;AACA;;;AACA,QAAMC,YAAY,GAAIH,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACI,cAAF;AACAZ,IAAAA,KAAK,CAACa,cAAN,CAAqBZ,UAArB;AACAC,IAAAA,aAAa,CAAC,EAAD,CAAb;AACD,GAJD,CAZ2B,CAkB3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,QAAQ,EAAES,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,KAAK,EAAE;AAAEG,MAAAA,KAAK,EAAE;AAAT,KAAd;AAAkC,IAAA,IAAI,EAAC,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAOD,CAnCD;;AAqCA,eAAef,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst SearchBar = (props) => {\n  const [inputValue, setInputValue] = useState('');\n  const [background, setBackground] = useState('#67a05c');\n  const [placer, setPlacer] = useState('');\n\n  const updateInputVal = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  // create a function searchForGif that takes the event, stops the default and then calls the setSearchQuery\n  // passing it the input Value\n  // clear the input Value\n  const searchForGif = (e) => {\n    e.preventDefault();\n    props.setSearchQuery(inputValue);\n    setInputValue('');\n  };\n\n  // add a useEffect to listen to the mousemoves on the window and use a function 'logKey' to react accordingly.\n  // logKey function will track the location of the mouse on the page and if the Y page coordinates for Y are greater\n  // than 200 and less then 650 the background state should be updated with a new string color #f4f488 and set the placeholder variable to\n  // say 'Pick a new GIF already!'\n  // otherwise the background should be set to #67a05c and the placeholder should say 'Search for a GIF'\n  // placeholders should receive their value from the placer slice of state.\n  // remember to cleanup that event listener\n  // value attribute on input should take its value from the inputValue\n  // input should have an onChange event listener that calls the sets the inputValue with the target value of the event\n  // background css for the style attribute on input should be added with the background slice of state\n  return (\n    <div className='searchBar'>\n      <form onSubmit={searchForGif}>\n        <input style={{ color: 'black' }} type='text' />\n      </form>\n    </div>\n  );\n};\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}